syntax = "proto3";

package calculator;

option java_package = "com.proto.calculator";
option java_multiple_files = true;

message SumRequest {
    int32 first_number = 1;
    int32 second_number = 2;
}

message SumResponse {
    int32 sum_result = 1;
}

message MultiplyRequest {
    int32 first_number = 1;
    int32 second_number = 2;
}

message MultiplyResponse {
    int32 multi_result = 1;
}

message PrimeNumberDecompositionRequest {
    int32 number = 1;
}

message PrimeNumberDecompositionResponse {
    int32 prime_factor = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double root_number = 1;
}

service CalculatorService {
    rpc Sum (SumRequest) returns (SumResponse) {
    };
    rpc Multiply (MultiplyRequest) returns (MultiplyResponse) {
    };
    rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {
    };

    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {
    };

    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {
    };

    // error handling example
    // this RPC will throw an exception if the send number is negative.
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {
    };

}